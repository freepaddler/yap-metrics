## SUCCESS updates

### POST query /update new gauge
# curl -X POST -i http://localhost:8080/update/gauge/g1/-1.75
POST http://localhost:8080/update/gauge/g1/-1.75

> assert_200_OK.js

### POST query /update same gauge
# curl -X POST -i http://localhost:8080/update/gauge/g1/1.0
POST http://localhost:8080/update/gauge/g1/1.0

> assert_200_OK.js

### POST query /update new counter
# curl -X POST -i http://localhost:8080/update/counter/c1/10
POST http://localhost:8080/update/counter/c1/10

> assert_200_OK.js

### POST query /update same counter
# curl -X POST -i http://localhost:8080/update/counter/c1/20
POST http://localhost:8080/update/counter/c1/20

> assert_200_OK.js


### POST JSON /update new gauge
# curl -X POST -i http://localhost:8080/update -d '{"id":"g2","type":"gauge","value":-1.75}'
POST http://localhost:8080/update

{"id":"g2","type":"gauge","value":-1.75}

> {%
    client.log(JSON.stringify(response))
    client.test("Check response", function () {
        client.assert(response.status === 200, "Invalid response. Expected 200 OK")
    })
    client.test("Check content-type", function () {
        client.assert(response.headers.valueOf("Content-Type") === "application/json")
    })
    okRes={
        "id": "g2",
        "type": "gauge",
        "value": -1.75
    }
    client.test("Check response", function () {
        client.assert(JSON.stringify(response.body) === JSON.stringify(okRes))
    })
%}

### POST JSON /update same gauge
# curl -X POST -i http://localhost:8080/update -d '{"id":"g2","type":"gauge","value":1.000}'
POST http://localhost:8080/update

{"id":"g2","type":"gauge","value":1}

> {%
    client.log(JSON.stringify(response))
    client.test("Check response", function () {
        client.assert(response.status === 200, "Invalid response. Expected 200 OK")
    })
    client.test("Check content-type", function () {
        client.assert(response.headers.valueOf("Content-Type") === "application/json")
    })
    okRes={
        "id": "g2",
        "type": "gauge",
        "value": 1.000
    }
    client.test("Check response", function () {
        client.assert(JSON.stringify(response.body) === JSON.stringify(okRes))
    })
%}

### POST JSON /update new counter
# curl -X POST -i http://localhost:8080/update -d '{"id":"c2","type":"counter","delta":10}'
POST http://localhost:8080/update

{"id":"c2","type":"counter","delta":10}

> {%
    client.log(JSON.stringify(response))
    client.test("Check response", function () {
        client.assert(response.status === 200, "Invalid response. Expected 200 OK")
    })
    client.test("Check content-type", function () {
        client.assert(response.headers.valueOf("Content-Type") === "application/json")
    })
    okRes={
        "id": "c2",
        "type": "counter",
        "delta": 10
    }
    client.test("Check response", function () {
        client.assert(JSON.stringify(response.body) === JSON.stringify(okRes))
    })
%}


### POST JSON /update same counter
# curl -X POST -i http://localhost:8080/update -d '{"id":"c2","type":"counter","delta":20}'
POST http://localhost:8080/update

{"id":"c2","type":"counter","delta":20}

> {%
    client.log(JSON.stringify(response))
    client.test("Check response", function () {
        client.assert(response.status === 200, "Invalid response. Expected 200 OK")
    })
    client.test("Check content-type", function () {
        client.assert(response.headers.valueOf("Content-Type") === "application/json")
    })
    okRes={
        "id": "c2",
        "type": "counter",
        "delta": 30
    }
    client.test("Check response", function () {
        client.assert(JSON.stringify(response.body) === JSON.stringify(okRes))
    })
%}
