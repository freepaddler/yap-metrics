// Code generated by MockGen. DO NOT EDIT.
// Source: handlers.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/freepaddler/yap-metrics/internal/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockGRPCHandlerStorage is a mock of GRPCHandlerStorage interface.
type MockGRPCHandlerStorage struct {
	ctrl     *gomock.Controller
	recorder *MockGRPCHandlerStorageMockRecorder
}

// MockGRPCHandlerStorageMockRecorder is the mock recorder for MockGRPCHandlerStorage.
type MockGRPCHandlerStorageMockRecorder struct {
	mock *MockGRPCHandlerStorage
}

// NewMockGRPCHandlerStorage creates a new mock instance.
func NewMockGRPCHandlerStorage(ctrl *gomock.Controller) *MockGRPCHandlerStorage {
	mock := &MockGRPCHandlerStorage{ctrl: ctrl}
	mock.recorder = &MockGRPCHandlerStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGRPCHandlerStorage) EXPECT() *MockGRPCHandlerStorageMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockGRPCHandlerStorage) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockGRPCHandlerStorageMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockGRPCHandlerStorage)(nil).Ping))
}

// UpdateMany mocks base method.
func (m *MockGRPCHandlerStorage) UpdateMany(metrics []models.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMany", metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMany indicates an expected call of UpdateMany.
func (mr *MockGRPCHandlerStorageMockRecorder) UpdateMany(metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMany", reflect.TypeOf((*MockGRPCHandlerStorage)(nil).UpdateMany), metrics)
}
